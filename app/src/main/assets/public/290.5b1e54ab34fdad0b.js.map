{"version":3,"file":"290.5b1e54ab34fdad0b.js","mappings":"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","names":["createBaseAnimation","pullingRefresherIcon","spinner","querySelector","circle","shadowRoot","spinnerArrowContainer","arrowContainer","arrow","baseAnimation","createAnimation","duration","easing","spinnerArrowContainerAnimation","addElement","keyframes","offset","opacity","circleInnerAnimation","strokeDasharray","circleOuterAnimation","transform","arrowContainerAnimation","arrowAnimation","addAnimation","translateElement","el","value","Promise","resolve","trans","transitionEndAsync","writeTask","style","setProperty","undefined","removeProperty","shouldUseNativeRefresher","_ref","_asyncToGenerator","referenceEl","mode","refresherContent","componentOnReady","pullingSpinner","refreshingSpinner","isPlatform","webkitOverflowScrolling","_x","_x2","apply","this","arguments","Refresher","constructor","hostRef","registerInstance","ionRefresh","createEvent","ionPull","ionStart","appliedStyles","didStart","progress","pointerDown","needsCompletion","didRefresh","lastVelocityY","animations","nativeRefresher","state","pullMin","pullMax","closeDuration","snapbackDuration","pullFactor","disabled","disabledChanged","gesture","enable","checkNativeRefresher","_this","useNativeRefresher","getIonMode","contentEl","closest","setupNativeRefresher","destroyNativeRefresher","scrollEl","scrollListenerCallback","removeEventListener","resetNativeRefresher","_this2","forEach","ani","destroy","setupiOSNativeRefresher","_this3","elementToTransform","ticks","querySelectorAll","MAX_PULL","clientHeight","NUM_TICKS","length","readTask","scrollTop","refresherHeight","ratio","clamp","setSpinnerOpacity","toString","emit","pullAmount","Math","abs","handleScrollWhileRefreshing","beginRefresh","hapticImpact","handleScrollWhilePulling","numTicks","i","min","max","progression","addEventListener","then","__webpack_require__","bind","createGesture","gestureName","gesturePriority","direction","threshold","onStart","onMove","ev","velocityY","onEnd","setupMDNativeRefresher","_this4","getElementRoot","refreshingCircle","canStart","data","animation","cancelled","overflowProperty","matches","ION_CONTENT_CLASS_SELECTOR","animationType","previousSibling","previousElementSibling","tagName","getRefresherAnimationType","createPullingAnimation","type","refresherEl","createScaleAnimation","height","spinnerAnimation","createTranslateAnimation","progressStart","push","deltaY","progressStep","progressEnd","onFinish","getTimeGivenProgression","snapBackAnimation","fromTo","createSnapBackAnimation","play","_this5","setCss","componentDidUpdate","connectedCallback","_this6","getAttribute","console","error","ION_CONTENT_ELEMENT_SELECTOR","customScrollTarget","getScrollElement","backgroundContentEl","getBackgroundElement","passive","printIonContentErrorMsg","disconnectedCallback","complete","_this7","raf","close","cancel","_this8","getProgress","memoizeOverflowStyle","detail","event","touches","Number","isNaN","cancelable","preventDefault","restoreOverflowStyle","delay","setTimeout","y","overflowVisible","shouldRestoreOverflowStyle","scrollStyle","backgroundStyle","transitionDuration","transitionDelay","overflow","overflowX","overflowY","overflowStyles","render","h","Host","slot","class","e","getElement","watchers","ios","md","RefresherContent","customHTMLEnabled","config","ENABLE_HTML_CONTENT_DEFAULT","pullingIcon","pullingText","refreshingText","componentWillLoad","overflowRefresher","arrowDown","renderPullingText","innerHTML","sanitizeDOMString","renderRefreshingText","hasSpinner","SPINNERS","name","paused","icon","caretBackSharp","lazy"],"sourceRoot":"webpack:///","sources":["./node_modules/@ionic/core/dist/esm/ion-refresher_2.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { w as writeTask, r as registerInstance, d as createEvent, e as readTask, h, f as getElement, H as Host } from './index-36a5fd75.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-e78d1307.js';\nimport { I as ION_CONTENT_CLASS_SELECTOR, b as ION_CONTENT_ELEMENT_SELECTOR, p as printIonContentErrorMsg, g as getScrollElement } from './index-7373924f.js';\nimport { t as transitionEndAsync, c as componentOnReady, l as clamp, g as getElementRoot, r as raf } from './helpers-f586db1c.js';\nimport { d as hapticImpact } from './haptic-029a46f6.js';\nimport { a as isPlatform, b as getIonMode, c as config } from './ionic-global-a9abd569.js';\nimport { c as createAnimation } from './animation-258fd22b.js';\nimport { E as ENABLE_HTML_CONTENT_DEFAULT, a as sanitizeDOMString } from './config-80c044f2.js';\nimport { h as caretBackSharp, i as arrowDown } from './index-393bc14a.js';\nimport { S as SPINNERS } from './spinner-configs-40ada8cd.js';\nimport './index-e86f0117.js';\nimport './index-b32cad98.js';\n\nconst getRefresherAnimationType = (contentEl) => {\n  const previousSibling = contentEl.previousElementSibling;\n  const hasHeader = previousSibling !== null && previousSibling.tagName === 'ION-HEADER';\n  return hasHeader ? 'translate' : 'scale';\n};\nconst createPullingAnimation = (type, pullingSpinner, refresherEl) => {\n  return type === 'scale'\n    ? createScaleAnimation(pullingSpinner, refresherEl)\n    : createTranslateAnimation(pullingSpinner, refresherEl);\n};\nconst createBaseAnimation = (pullingRefresherIcon) => {\n  // TODO(FW-2832): add types/re-evaluate asserting so many things\n  const spinner = pullingRefresherIcon.querySelector('ion-spinner');\n  const circle = spinner.shadowRoot.querySelector('circle');\n  const spinnerArrowContainer = pullingRefresherIcon.querySelector('.spinner-arrow-container');\n  const arrowContainer = pullingRefresherIcon.querySelector('.arrow-container');\n  const arrow = arrowContainer ? arrowContainer.querySelector('ion-icon') : null;\n  const baseAnimation = createAnimation().duration(1000).easing('ease-out');\n  const spinnerArrowContainerAnimation = createAnimation()\n    .addElement(spinnerArrowContainer)\n    .keyframes([\n    { offset: 0, opacity: '0.3' },\n    { offset: 0.45, opacity: '0.3' },\n    { offset: 0.55, opacity: '1' },\n    { offset: 1, opacity: '1' },\n  ]);\n  const circleInnerAnimation = createAnimation()\n    .addElement(circle)\n    .keyframes([\n    { offset: 0, strokeDasharray: '1px, 200px' },\n    { offset: 0.2, strokeDasharray: '1px, 200px' },\n    { offset: 0.55, strokeDasharray: '100px, 200px' },\n    { offset: 1, strokeDasharray: '100px, 200px' },\n  ]);\n  const circleOuterAnimation = createAnimation()\n    .addElement(spinner)\n    .keyframes([\n    { offset: 0, transform: 'rotate(-90deg)' },\n    { offset: 1, transform: 'rotate(210deg)' },\n  ]);\n  /**\n   * Only add arrow animation if present\n   * this allows users to customize the spinners\n   * without errors being thrown\n   */\n  if (arrowContainer && arrow) {\n    const arrowContainerAnimation = createAnimation()\n      .addElement(arrowContainer)\n      .keyframes([\n      { offset: 0, transform: 'rotate(0deg)' },\n      { offset: 0.3, transform: 'rotate(0deg)' },\n      { offset: 0.55, transform: 'rotate(280deg)' },\n      { offset: 1, transform: 'rotate(400deg)' },\n    ]);\n    const arrowAnimation = createAnimation()\n      .addElement(arrow)\n      .keyframes([\n      { offset: 0, transform: 'translateX(2px) scale(0)' },\n      { offset: 0.3, transform: 'translateX(2px) scale(0)' },\n      { offset: 0.55, transform: 'translateX(-1.5px) scale(1)' },\n      { offset: 1, transform: 'translateX(-1.5px) scale(1)' },\n    ]);\n    baseAnimation.addAnimation([arrowContainerAnimation, arrowAnimation]);\n  }\n  return baseAnimation.addAnimation([spinnerArrowContainerAnimation, circleInnerAnimation, circleOuterAnimation]);\n};\nconst createScaleAnimation = (pullingRefresherIcon, refresherEl) => {\n  /**\n   * Do not take the height of the refresher icon\n   * because at this point the DOM has not updated,\n   * so the refresher icon is still hidden with\n   * display: none.\n   * The `ion-refresher` container height\n   * is roughly the amount we need to offset\n   * the icon by when pulling down.\n   */\n  const height = refresherEl.clientHeight;\n  const spinnerAnimation = createAnimation()\n    .addElement(pullingRefresherIcon)\n    .keyframes([\n    { offset: 0, transform: `scale(0) translateY(-${height}px)` },\n    { offset: 1, transform: 'scale(1) translateY(100px)' },\n  ]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createTranslateAnimation = (pullingRefresherIcon, refresherEl) => {\n  /**\n   * Do not take the height of the refresher icon\n   * because at this point the DOM has not updated,\n   * so the refresher icon is still hidden with\n   * display: none.\n   * The `ion-refresher` container height\n   * is roughly the amount we need to offset\n   * the icon by when pulling down.\n   */\n  const height = refresherEl.clientHeight;\n  const spinnerAnimation = createAnimation()\n    .addElement(pullingRefresherIcon)\n    .keyframes([\n    { offset: 0, transform: `translateY(-${height}px)` },\n    { offset: 1, transform: 'translateY(100px)' },\n  ]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createSnapBackAnimation = (pullingRefresherIcon) => {\n  return createAnimation()\n    .duration(125)\n    .addElement(pullingRefresherIcon)\n    .fromTo('transform', 'translateY(var(--ion-pulling-refresher-translate, 100px))', 'translateY(0px)');\n};\n// iOS Native Refresher\n// -----------------------------\nconst setSpinnerOpacity = (spinner, opacity) => {\n  spinner.style.setProperty('opacity', opacity.toString());\n};\nconst handleScrollWhilePulling = (ticks, numTicks, pullAmount) => {\n  const max = 1;\n  writeTask(() => {\n    ticks.forEach((el, i) => {\n      /**\n       * Compute the opacity of each tick\n       * mark as a percentage of the pullAmount\n       * offset by max / numTicks so\n       * the tick marks are shown staggered.\n       */\n      const min = i * (max / numTicks);\n      const range = max - min;\n      const start = pullAmount - min;\n      const progression = clamp(0, start / range, 1);\n      el.style.setProperty('opacity', progression.toString());\n    });\n  });\n};\nconst handleScrollWhileRefreshing = (spinner, lastVelocityY) => {\n  writeTask(() => {\n    // If user pulls down quickly, the spinner should spin faster\n    spinner.style.setProperty('--refreshing-rotation-duration', lastVelocityY >= 1.0 ? '0.5s' : '2s');\n    spinner.style.setProperty('opacity', '1');\n  });\n};\nconst translateElement = (el, value, duration = 200) => {\n  if (!el) {\n    return Promise.resolve();\n  }\n  const trans = transitionEndAsync(el, duration);\n  writeTask(() => {\n    el.style.setProperty('transition', `${duration}ms all ease-out`);\n    if (value === undefined) {\n      el.style.removeProperty('transform');\n    }\n    else {\n      el.style.setProperty('transform', `translate3d(0px, ${value}, 0px)`);\n    }\n  });\n  return trans;\n};\n// Utils\n// -----------------------------\nconst shouldUseNativeRefresher = async (referenceEl, mode) => {\n  const refresherContent = referenceEl.querySelector('ion-refresher-content');\n  if (!refresherContent) {\n    return Promise.resolve(false);\n  }\n  await new Promise((resolve) => componentOnReady(refresherContent, resolve));\n  const pullingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n  const refreshingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n  return (pullingSpinner !== null &&\n    refreshingSpinner !== null &&\n    ((mode === 'ios' && isPlatform('mobile') && referenceEl.style.webkitOverflowScrolling !== undefined) ||\n      mode === 'md'));\n};\n\nconst refresherIosCss = \"ion-refresher{top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}@supports (inset-inline-start: 0){ion-refresher{inset-inline-start:0}}@supports not (inset-inline-start: 0){ion-refresher{left:0}:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}[dir=rtl] ion-refresher{left:unset;right:unset;right:0}@supports selector(:dir(rtl)){ion-refresher:dir(rtl){left:unset;right:unset;right:0}}}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}:host-context([dir=rtl]) .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}[dir=rtl] .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}@supports selector(:dir(rtl)){.refresher-pulling-icon:dir(rtl),.refresher-refreshing-icon:dir(rtl){-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-ios .refresher-pulling-icon,.refresher-ios .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-ios .refresher-pulling-text,.refresher-ios .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-lines-ios line,.refresher-ios .refresher-refreshing .spinner-lines-small-ios line,.refresher-ios .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-bubbles circle,.refresher-ios .refresher-refreshing .spinner-circles circle,.refresher-ios .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:0;margin-bottom:0}.refresher-native .refresher-refreshing ion-spinner{--refreshing-rotation-duration:2s;display:none;-webkit-animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards;animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards}.refresher-native .refresher-refreshing{display:none;-webkit-animation:250ms linear refresher-pop forwards;animation:250ms linear refresher-pop forwards}.refresher-native ion-spinner{width:32px;height:32px;color:var(--ion-color-step-450, #747577)}.refresher-native.refresher-refreshing .refresher-pulling ion-spinner,.refresher-native.refresher-completing .refresher-pulling ion-spinner{display:none}.refresher-native.refresher-refreshing .refresher-refreshing ion-spinner,.refresher-native.refresher-completing .refresher-refreshing ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-pulling ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-refreshing ion-spinner{display:none}.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0) rotate(180deg);transform:scale(0) rotate(180deg);-webkit-transition:300ms;transition:300ms}@-webkit-keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@-webkit-keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}\";\n\nconst refresherMdCss = \"ion-refresher{top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}@supports (inset-inline-start: 0){ion-refresher{inset-inline-start:0}}@supports not (inset-inline-start: 0){ion-refresher{left:0}:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}[dir=rtl] ion-refresher{left:unset;right:unset;right:0}@supports selector(:dir(rtl)){ion-refresher:dir(rtl){left:unset;right:unset;right:0}}}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}:host-context([dir=rtl]) .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}[dir=rtl] .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}@supports selector(:dir(rtl)){.refresher-pulling-icon:dir(rtl),.refresher-refreshing-icon:dir(rtl){-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-md .refresher-pulling-icon,.refresher-md .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-md .refresher-pulling-text,.refresher-md .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-lines-md line,.refresher-md .refresher-refreshing .spinner-lines-small-md line,.refresher-md .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-bubbles circle,.refresher-md .refresher-refreshing .spinner-circles circle,.refresher-md .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:0;margin-bottom:0;width:24px;height:24px;color:var(--ion-color-primary, #3880ff)}ion-refresher.refresher-native .spinner-arrow-container{display:inherit}ion-refresher.refresher-native .arrow-container{display:block;position:absolute;width:24px;height:24px}ion-refresher.refresher-native .arrow-container ion-icon{-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:0;margin-bottom:0;left:0;right:0;bottom:-4px;position:absolute;color:var(--ion-color-primary, #3880ff);font-size:12px}ion-refresher.refresher-native.refresher-pulling ion-refresher-content .refresher-pulling,ion-refresher.refresher-native.refresher-ready ion-refresher-content .refresher-pulling{display:-ms-flexbox;display:flex}ion-refresher.refresher-native.refresher-refreshing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-cancelling ion-refresher-content .refresher-refreshing{display:-ms-flexbox;display:flex}ion-refresher.refresher-native .refresher-pulling-icon{-webkit-transform:translateY(calc(-100% - 10px));transform:translateY(calc(-100% - 10px))}ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:0;margin-bottom:0;border-radius:100%;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px;padding-top:8px;padding-bottom:8px;display:-ms-flexbox;display:flex;border:1px solid var(--ion-color-step-200, #ececec);background:var(--ion-color-step-250, #ffffff);-webkit-box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1);box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1)}\";\n\nconst Refresher = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRefresh = createEvent(this, \"ionRefresh\", 7);\n    this.ionPull = createEvent(this, \"ionPull\", 7);\n    this.ionStart = createEvent(this, \"ionStart\", 7);\n    this.appliedStyles = false;\n    this.didStart = false;\n    this.progress = 0;\n    this.pointerDown = false;\n    this.needsCompletion = false;\n    this.didRefresh = false;\n    this.lastVelocityY = 0;\n    this.animations = [];\n    this.nativeRefresher = false;\n    this.state = 1 /* RefresherState.Inactive */;\n    this.pullMin = 60;\n    this.pullMax = this.pullMin + 60;\n    this.closeDuration = '280ms';\n    this.snapbackDuration = '280ms';\n    this.pullFactor = 1;\n    this.disabled = false;\n  }\n  disabledChanged() {\n    if (this.gesture) {\n      this.gesture.enable(!this.disabled);\n    }\n  }\n  async checkNativeRefresher() {\n    const useNativeRefresher = await shouldUseNativeRefresher(this.el, getIonMode(this));\n    if (useNativeRefresher && !this.nativeRefresher) {\n      const contentEl = this.el.closest('ion-content');\n      this.setupNativeRefresher(contentEl);\n    }\n    else if (!useNativeRefresher) {\n      this.destroyNativeRefresher();\n    }\n  }\n  destroyNativeRefresher() {\n    if (this.scrollEl && this.scrollListenerCallback) {\n      this.scrollEl.removeEventListener('scroll', this.scrollListenerCallback);\n      this.scrollListenerCallback = undefined;\n    }\n    this.nativeRefresher = false;\n  }\n  async resetNativeRefresher(el, state) {\n    this.state = state;\n    if (getIonMode(this) === 'ios') {\n      await translateElement(el, undefined, 300);\n    }\n    else {\n      await transitionEndAsync(this.el.querySelector('.refresher-refreshing-icon'), 200);\n    }\n    this.didRefresh = false;\n    this.needsCompletion = false;\n    this.pointerDown = false;\n    this.animations.forEach((ani) => ani.destroy());\n    this.animations = [];\n    this.progress = 0;\n    this.state = 1 /* RefresherState.Inactive */;\n  }\n  async setupiOSNativeRefresher(pullingSpinner, refreshingSpinner) {\n    this.elementToTransform = this.scrollEl;\n    const ticks = pullingSpinner.shadowRoot.querySelectorAll('svg');\n    let MAX_PULL = this.scrollEl.clientHeight * 0.16;\n    const NUM_TICKS = ticks.length;\n    writeTask(() => ticks.forEach((el) => el.style.setProperty('animation', 'none')));\n    this.scrollListenerCallback = () => {\n      // If pointer is not on screen or refresher is not active, ignore scroll\n      if (!this.pointerDown && this.state === 1 /* RefresherState.Inactive */) {\n        return;\n      }\n      readTask(() => {\n        // PTR should only be active when overflow scrolling at the top\n        const scrollTop = this.scrollEl.scrollTop;\n        const refresherHeight = this.el.clientHeight;\n        if (scrollTop > 0) {\n          /**\n           * If refresher is refreshing and user tries to scroll\n           * progressively fade refresher out/in\n           */\n          if (this.state === 8 /* RefresherState.Refreshing */) {\n            const ratio = clamp(0, scrollTop / (refresherHeight * 0.5), 1);\n            writeTask(() => setSpinnerOpacity(refreshingSpinner, 1 - ratio));\n            return;\n          }\n          return;\n        }\n        if (this.pointerDown) {\n          if (!this.didStart) {\n            this.didStart = true;\n            this.ionStart.emit();\n          }\n          // emit \"pulling\" on every move\n          if (this.pointerDown) {\n            this.ionPull.emit();\n          }\n        }\n        /**\n         * We want to delay the start of this gesture by ~30px\n         * when initially pulling down so the refresher does not\n         * overlap with the content. But when letting go of the\n         * gesture before the refresher completes, we want the\n         * refresher tick marks to quickly fade out.\n         */\n        const offset = this.didStart ? 30 : 0;\n        const pullAmount = (this.progress = clamp(0, (Math.abs(scrollTop) - offset) / MAX_PULL, 1));\n        const shouldShowRefreshingSpinner = this.state === 8 /* RefresherState.Refreshing */ || pullAmount === 1;\n        if (shouldShowRefreshingSpinner) {\n          if (this.pointerDown) {\n            handleScrollWhileRefreshing(refreshingSpinner, this.lastVelocityY);\n          }\n          if (!this.didRefresh) {\n            this.beginRefresh();\n            this.didRefresh = true;\n            hapticImpact({ style: 'light' });\n            /**\n             * Translate the content element otherwise when pointer is removed\n             * from screen the scroll content will bounce back over the refresher\n             */\n            if (!this.pointerDown) {\n              translateElement(this.elementToTransform, `${refresherHeight}px`);\n            }\n          }\n        }\n        else {\n          this.state = 2 /* RefresherState.Pulling */;\n          handleScrollWhilePulling(ticks, NUM_TICKS, pullAmount);\n        }\n      });\n    };\n    this.scrollEl.addEventListener('scroll', this.scrollListenerCallback);\n    this.gesture = (await import('./index-422b6e83.js')).createGesture({\n      el: this.scrollEl,\n      gestureName: 'refresher',\n      gesturePriority: 31,\n      direction: 'y',\n      threshold: 5,\n      onStart: () => {\n        this.pointerDown = true;\n        if (!this.didRefresh) {\n          translateElement(this.elementToTransform, '0px');\n        }\n        /**\n         * If the content had `display: none` when\n         * the refresher was initialized, its clientHeight\n         * will be 0. When the gesture starts, the content\n         * will be visible, so try to get the correct\n         * client height again. This is most common when\n         * using the refresher in an ion-menu.\n         */\n        if (MAX_PULL === 0) {\n          MAX_PULL = this.scrollEl.clientHeight * 0.16;\n        }\n      },\n      onMove: (ev) => {\n        this.lastVelocityY = ev.velocityY;\n      },\n      onEnd: () => {\n        this.pointerDown = false;\n        this.didStart = false;\n        if (this.needsCompletion) {\n          this.resetNativeRefresher(this.elementToTransform, 32 /* RefresherState.Completing */);\n          this.needsCompletion = false;\n        }\n        else if (this.didRefresh) {\n          readTask(() => translateElement(this.elementToTransform, `${this.el.clientHeight}px`));\n        }\n      },\n    });\n    this.disabledChanged();\n  }\n  async setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner) {\n    const circle = getElementRoot(pullingSpinner).querySelector('circle');\n    const pullingRefresherIcon = this.el.querySelector('ion-refresher-content .refresher-pulling-icon');\n    const refreshingCircle = getElementRoot(refreshingSpinner).querySelector('circle');\n    if (circle !== null && refreshingCircle !== null) {\n      writeTask(() => {\n        circle.style.setProperty('animation', 'none');\n        // This lines up the animation on the refreshing spinner with the pulling spinner\n        refreshingSpinner.style.setProperty('animation-delay', '-655ms');\n        refreshingCircle.style.setProperty('animation-delay', '-655ms');\n      });\n    }\n    this.gesture = (await import('./index-422b6e83.js')).createGesture({\n      el: this.scrollEl,\n      gestureName: 'refresher',\n      gesturePriority: 31,\n      direction: 'y',\n      threshold: 5,\n      canStart: () => this.state !== 8 /* RefresherState.Refreshing */ &&\n        this.state !== 32 /* RefresherState.Completing */ &&\n        this.scrollEl.scrollTop === 0,\n      onStart: (ev) => {\n        this.progress = 0;\n        ev.data = { animation: undefined, didStart: false, cancelled: false };\n      },\n      onMove: (ev) => {\n        if ((ev.velocityY < 0 && this.progress === 0 && !ev.data.didStart) || ev.data.cancelled) {\n          ev.data.cancelled = true;\n          return;\n        }\n        if (!ev.data.didStart) {\n          ev.data.didStart = true;\n          this.state = 2 /* RefresherState.Pulling */;\n          // When ion-refresher is being used with a custom scroll target, the overflow styles need to be applied directly instead of via a css variable\n          const { scrollEl } = this;\n          const overflowProperty = scrollEl.matches(ION_CONTENT_CLASS_SELECTOR) ? 'overflow' : '--overflow';\n          writeTask(() => scrollEl.style.setProperty(overflowProperty, 'hidden'));\n          const animationType = getRefresherAnimationType(contentEl);\n          const animation = createPullingAnimation(animationType, pullingRefresherIcon, this.el);\n          ev.data.animation = animation;\n          animation.progressStart(false, 0);\n          this.ionStart.emit();\n          this.animations.push(animation);\n          return;\n        }\n        // Since we are using an easing curve, slow the gesture tracking down a bit\n        this.progress = clamp(0, (ev.deltaY / 180) * 0.5, 1);\n        ev.data.animation.progressStep(this.progress);\n        this.ionPull.emit();\n      },\n      onEnd: (ev) => {\n        if (!ev.data.didStart) {\n          return;\n        }\n        this.gesture.enable(false);\n        const { scrollEl } = this;\n        const overflowProperty = scrollEl.matches(ION_CONTENT_CLASS_SELECTOR) ? 'overflow' : '--overflow';\n        writeTask(() => scrollEl.style.removeProperty(overflowProperty));\n        if (this.progress <= 0.4) {\n          ev.data.animation.progressEnd(0, this.progress, 500).onFinish(() => {\n            this.animations.forEach((ani) => ani.destroy());\n            this.animations = [];\n            this.gesture.enable(true);\n            this.state = 1 /* RefresherState.Inactive */;\n          });\n          return;\n        }\n        const progress = getTimeGivenProgression([0, 0], [0, 0], [1, 1], [1, 1], this.progress)[0];\n        const snapBackAnimation = createSnapBackAnimation(pullingRefresherIcon);\n        this.animations.push(snapBackAnimation);\n        writeTask(async () => {\n          pullingRefresherIcon.style.setProperty('--ion-pulling-refresher-translate', `${progress * 100}px`);\n          ev.data.animation.progressEnd();\n          await snapBackAnimation.play();\n          this.beginRefresh();\n          ev.data.animation.destroy();\n          this.gesture.enable(true);\n        });\n      },\n    });\n    this.disabledChanged();\n  }\n  async setupNativeRefresher(contentEl) {\n    if (this.scrollListenerCallback || !contentEl || this.nativeRefresher || !this.scrollEl) {\n      return;\n    }\n    /**\n     * If using non-native refresher before make sure\n     * we clean up any old CSS. This can happen when\n     * a user manually calls the refresh method in a\n     * component create callback before the native\n     * refresher is setup.\n     */\n    this.setCss(0, '', false, '');\n    this.nativeRefresher = true;\n    const pullingSpinner = this.el.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n    const refreshingSpinner = this.el.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n    if (getIonMode(this) === 'ios') {\n      this.setupiOSNativeRefresher(pullingSpinner, refreshingSpinner);\n    }\n    else {\n      this.setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner);\n    }\n  }\n  componentDidUpdate() {\n    this.checkNativeRefresher();\n  }\n  async connectedCallback() {\n    if (this.el.getAttribute('slot') !== 'fixed') {\n      console.error('Make sure you use: <ion-refresher slot=\"fixed\">');\n      return;\n    }\n    const contentEl = this.el.closest(ION_CONTENT_ELEMENT_SELECTOR);\n    if (!contentEl) {\n      printIonContentErrorMsg(this.el);\n      return;\n    }\n    /**\n     * Waits for the content to be ready before querying the scroll\n     * or the background content element.\n     */\n    componentOnReady(contentEl, async () => {\n      const customScrollTarget = contentEl.querySelector(ION_CONTENT_CLASS_SELECTOR);\n      /**\n       * Query the custom scroll target (if available), first. In refresher implementations,\n       * the ion-refresher element will always be a direct child of ion-content (slot=\"fixed\"). By\n       * querying the custom scroll target first and falling back to the ion-content element,\n       * the correct scroll element will be returned by the implementation.\n       */\n      this.scrollEl = await getScrollElement(customScrollTarget !== null && customScrollTarget !== void 0 ? customScrollTarget : contentEl);\n      /**\n       * Query the background content element from the host ion-content element directly.\n       */\n      this.backgroundContentEl = await contentEl.getBackgroundElement();\n      if (await shouldUseNativeRefresher(this.el, getIonMode(this))) {\n        this.setupNativeRefresher(contentEl);\n      }\n      else {\n        this.gesture = (await import('./index-422b6e83.js')).createGesture({\n          el: contentEl,\n          gestureName: 'refresher',\n          gesturePriority: 31,\n          direction: 'y',\n          threshold: 20,\n          passive: false,\n          canStart: () => this.canStart(),\n          onStart: () => this.onStart(),\n          onMove: (ev) => this.onMove(ev),\n          onEnd: () => this.onEnd(),\n        });\n        this.disabledChanged();\n      }\n    });\n  }\n  disconnectedCallback() {\n    this.destroyNativeRefresher();\n    this.scrollEl = undefined;\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n  }\n  /**\n   * Call `complete()` when your async operation has completed.\n   * For example, the `refreshing` state is while the app is performing\n   * an asynchronous operation, such as receiving more data from an\n   * AJAX request. Once the data has been received, you then call this\n   * method to signify that the refreshing has completed and to close\n   * the refresher. This method also changes the refresher's state from\n   * `refreshing` to `completing`.\n   */\n  async complete() {\n    if (this.nativeRefresher) {\n      this.needsCompletion = true;\n      // Do not reset scroll el until user removes pointer from screen\n      if (!this.pointerDown) {\n        raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 32 /* RefresherState.Completing */)));\n      }\n    }\n    else {\n      this.close(32 /* RefresherState.Completing */, '120ms');\n    }\n  }\n  /**\n   * Changes the refresher's state from `refreshing` to `cancelling`.\n   */\n  async cancel() {\n    if (this.nativeRefresher) {\n      // Do not reset scroll el until user removes pointer from screen\n      if (!this.pointerDown) {\n        raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 16 /* RefresherState.Cancelling */)));\n      }\n    }\n    else {\n      this.close(16 /* RefresherState.Cancelling */, '');\n    }\n  }\n  /**\n   * A number representing how far down the user has pulled.\n   * The number `0` represents the user hasn't pulled down at all. The\n   * number `1`, and anything greater than `1`, represents that the user\n   * has pulled far enough down that when they let go then the refresh will\n   * happen. If they let go and the number is less than `1`, then the\n   * refresh will not happen, and the content will return to it's original\n   * position.\n   */\n  getProgress() {\n    return Promise.resolve(this.progress);\n  }\n  canStart() {\n    if (!this.scrollEl) {\n      return false;\n    }\n    if (this.state !== 1 /* RefresherState.Inactive */) {\n      return false;\n    }\n    // if the scrollTop is greater than zero then it's\n    // not possible to pull the content down yet\n    if (this.scrollEl.scrollTop > 0) {\n      return false;\n    }\n    return true;\n  }\n  onStart() {\n    this.progress = 0;\n    this.state = 1 /* RefresherState.Inactive */;\n    this.memoizeOverflowStyle();\n  }\n  onMove(detail) {\n    if (!this.scrollEl) {\n      return;\n    }\n    // this method can get called like a bazillion times per second,\n    // so it's built to be as efficient as possible, and does its\n    // best to do any DOM read/writes only when absolutely necessary\n    // if multi-touch then get out immediately\n    const ev = detail.event;\n    if (ev.touches !== undefined && ev.touches.length > 1) {\n      return;\n    }\n    // do nothing if it's actively refreshing\n    // or it's in the way of closing\n    // or this was never a startY\n    if ((this.state & 56 /* RefresherState._BUSY_ */) !== 0) {\n      return;\n    }\n    const pullFactor = Number.isNaN(this.pullFactor) || this.pullFactor < 0 ? 1 : this.pullFactor;\n    const deltaY = detail.deltaY * pullFactor;\n    // don't bother if they're scrolling up\n    // and have not already started dragging\n    if (deltaY <= 0) {\n      // the current Y is higher than the starting Y\n      // so they scrolled up enough to be ignored\n      this.progress = 0;\n      this.state = 1 /* RefresherState.Inactive */;\n      if (this.appliedStyles) {\n        // reset the styles only if they were applied\n        this.setCss(0, '', false, '');\n        return;\n      }\n      return;\n    }\n    if (this.state === 1 /* RefresherState.Inactive */) {\n      // this refresh is not already actively pulling down\n      // get the content's scrollTop\n      const scrollHostScrollTop = this.scrollEl.scrollTop;\n      // if the scrollTop is greater than zero then it's\n      // not possible to pull the content down yet\n      if (scrollHostScrollTop > 0) {\n        this.progress = 0;\n        return;\n      }\n      // content scrolled all the way to the top, and dragging down\n      this.state = 2 /* RefresherState.Pulling */;\n    }\n    // prevent native scroll events\n    if (ev.cancelable) {\n      ev.preventDefault();\n    }\n    // the refresher is actively pulling at this point\n    // move the scroll element within the content element\n    this.setCss(deltaY, '0ms', true, '');\n    if (deltaY === 0) {\n      // don't continue if there's no delta yet\n      this.progress = 0;\n      return;\n    }\n    const pullMin = this.pullMin;\n    // set pull progress\n    this.progress = deltaY / pullMin;\n    // emit \"start\" if it hasn't started yet\n    if (!this.didStart) {\n      this.didStart = true;\n      this.ionStart.emit();\n    }\n    // emit \"pulling\" on every move\n    this.ionPull.emit();\n    // do nothing if the delta is less than the pull threshold\n    if (deltaY < pullMin) {\n      // ensure it stays in the pulling state, cuz its not ready yet\n      this.state = 2 /* RefresherState.Pulling */;\n      return;\n    }\n    if (deltaY > this.pullMax) {\n      // they pulled farther than the max, so kick off the refresh\n      this.beginRefresh();\n      return;\n    }\n    // pulled farther than the pull min!!\n    // it is now in the `ready` state!!\n    // if they let go then it'll refresh, kerpow!!\n    this.state = 4 /* RefresherState.Ready */;\n    return;\n  }\n  onEnd() {\n    // only run in a zone when absolutely necessary\n    if (this.state === 4 /* RefresherState.Ready */) {\n      // they pulled down far enough, so it's ready to refresh\n      this.beginRefresh();\n    }\n    else if (this.state === 2 /* RefresherState.Pulling */) {\n      // they were pulling down, but didn't pull down far enough\n      // set the content back to it's original location\n      // and close the refresher\n      // set that the refresh is actively cancelling\n      this.cancel();\n    }\n    else if (this.state === 1 /* RefresherState.Inactive */) {\n      /**\n       * The pull to refresh gesture was aborted\n       * so we should immediately restore any overflow styles\n       * that have been modified. Do not call this.cancel\n       * because the styles will only be reset after a timeout.\n       * If the gesture is aborted then scrolling should be\n       * available right away.\n       */\n      this.restoreOverflowStyle();\n    }\n  }\n  beginRefresh() {\n    // assumes we're already back in a zone\n    // they pulled down far enough, so it's ready to refresh\n    this.state = 8 /* RefresherState.Refreshing */;\n    // place the content in a hangout position while it thinks\n    this.setCss(this.pullMin, this.snapbackDuration, true, '');\n    // emit \"refresh\" because it was pulled down far enough\n    // and they let go to begin refreshing\n    this.ionRefresh.emit({\n      complete: this.complete.bind(this),\n    });\n  }\n  close(state, delay) {\n    // create fallback timer incase something goes wrong with transitionEnd event\n    setTimeout(() => {\n      this.state = 1 /* RefresherState.Inactive */;\n      this.progress = 0;\n      this.didStart = false;\n      /**\n       * Reset any overflow styles so the\n       * user can scroll again.\n       */\n      this.setCss(0, '0ms', false, '', true);\n    }, 600);\n    // reset the styles on the scroll element\n    // set that the refresh is actively cancelling/completing\n    this.state = state;\n    this.setCss(0, this.closeDuration, true, delay);\n  }\n  setCss(y, duration, overflowVisible, delay, shouldRestoreOverflowStyle = false) {\n    if (this.nativeRefresher) {\n      return;\n    }\n    this.appliedStyles = y > 0;\n    writeTask(() => {\n      if (this.scrollEl && this.backgroundContentEl) {\n        const scrollStyle = this.scrollEl.style;\n        const backgroundStyle = this.backgroundContentEl.style;\n        scrollStyle.transform = backgroundStyle.transform = y > 0 ? `translateY(${y}px) translateZ(0px)` : '';\n        scrollStyle.transitionDuration = backgroundStyle.transitionDuration = duration;\n        scrollStyle.transitionDelay = backgroundStyle.transitionDelay = delay;\n        scrollStyle.overflow = overflowVisible ? 'hidden' : '';\n      }\n      /**\n       * Reset the overflow styles only once\n       * the pull to refresh effect has been closed.\n       * This ensures that the gesture is done\n       * and the refresh operation has either\n       * been aborted or has completed.\n       */\n      if (shouldRestoreOverflowStyle) {\n        this.restoreOverflowStyle();\n      }\n    });\n  }\n  memoizeOverflowStyle() {\n    if (this.scrollEl) {\n      const { overflow, overflowX, overflowY } = this.scrollEl.style;\n      this.overflowStyles = {\n        overflow: overflow !== null && overflow !== void 0 ? overflow : '',\n        overflowX: overflowX !== null && overflowX !== void 0 ? overflowX : '',\n        overflowY: overflowY !== null && overflowY !== void 0 ? overflowY : '',\n      };\n    }\n  }\n  restoreOverflowStyle() {\n    if (this.overflowStyles !== undefined && this.scrollEl !== undefined) {\n      const { overflow, overflowX, overflowY } = this.overflowStyles;\n      this.scrollEl.style.overflow = overflow;\n      this.scrollEl.style.overflowX = overflowX;\n      this.scrollEl.style.overflowY = overflowY;\n      this.overflowStyles = undefined;\n    }\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { slot: \"fixed\", class: {\n        [mode]: true,\n        // Used internally for styling\n        [`refresher-${mode}`]: true,\n        'refresher-native': this.nativeRefresher,\n        'refresher-active': this.state !== 1 /* RefresherState.Inactive */,\n        'refresher-pulling': this.state === 2 /* RefresherState.Pulling */,\n        'refresher-ready': this.state === 4 /* RefresherState.Ready */,\n        'refresher-refreshing': this.state === 8 /* RefresherState.Refreshing */,\n        'refresher-cancelling': this.state === 16 /* RefresherState.Cancelling */,\n        'refresher-completing': this.state === 32 /* RefresherState.Completing */,\n      } }));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n};\nRefresher.style = {\n  ios: refresherIosCss,\n  md: refresherMdCss\n};\n\nconst RefresherContent = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.customHTMLEnabled = config.get('innerHTMLTemplatesEnabled', ENABLE_HTML_CONTENT_DEFAULT);\n    this.pullingIcon = undefined;\n    this.pullingText = undefined;\n    this.refreshingSpinner = undefined;\n    this.refreshingText = undefined;\n  }\n  componentWillLoad() {\n    if (this.pullingIcon === undefined) {\n      const mode = getIonMode(this);\n      const overflowRefresher = this.el.style.webkitOverflowScrolling !== undefined ? 'lines' : arrowDown;\n      this.pullingIcon = config.get('refreshingIcon', mode === 'ios' && isPlatform('mobile') ? config.get('spinner', overflowRefresher) : 'circular');\n    }\n    if (this.refreshingSpinner === undefined) {\n      const mode = getIonMode(this);\n      this.refreshingSpinner = config.get('refreshingSpinner', config.get('spinner', mode === 'ios' ? 'lines' : 'circular'));\n    }\n  }\n  renderPullingText() {\n    const { customHTMLEnabled, pullingText } = this;\n    if (customHTMLEnabled) {\n      return h(\"div\", { class: \"refresher-pulling-text\", innerHTML: sanitizeDOMString(pullingText) });\n    }\n    return h(\"div\", { class: \"refresher-pulling-text\" }, pullingText);\n  }\n  renderRefreshingText() {\n    const { customHTMLEnabled, refreshingText } = this;\n    if (customHTMLEnabled) {\n      return h(\"div\", { class: \"refresher-refreshing-text\", innerHTML: sanitizeDOMString(refreshingText) });\n    }\n    return h(\"div\", { class: \"refresher-refreshing-text\" }, refreshingText);\n  }\n  render() {\n    const pullingIcon = this.pullingIcon;\n    const hasSpinner = pullingIcon != null && SPINNERS[pullingIcon] !== undefined;\n    const mode = getIonMode(this);\n    return (h(Host, { class: mode }, h(\"div\", { class: \"refresher-pulling\" }, this.pullingIcon && hasSpinner && (h(\"div\", { class: \"refresher-pulling-icon\" }, h(\"div\", { class: \"spinner-arrow-container\" }, h(\"ion-spinner\", { name: this.pullingIcon, paused: true }), mode === 'md' && this.pullingIcon === 'circular' && (h(\"div\", { class: \"arrow-container\" }, h(\"ion-icon\", { icon: caretBackSharp, \"aria-hidden\": \"true\" })))))), this.pullingIcon && !hasSpinner && (h(\"div\", { class: \"refresher-pulling-icon\" }, h(\"ion-icon\", { icon: this.pullingIcon, lazy: false, \"aria-hidden\": \"true\" }))), this.pullingText !== undefined && this.renderPullingText()), h(\"div\", { class: \"refresher-refreshing\" }, this.refreshingSpinner && (h(\"div\", { class: \"refresher-refreshing-icon\" }, h(\"ion-spinner\", { name: this.refreshingSpinner }))), this.refreshingText !== undefined && this.renderRefreshingText())));\n  }\n  get el() { return getElement(this); }\n};\n\nexport { Refresher as ion_refresher, RefresherContent as ion_refresher_content };\n"],"x_google_ignoreList":[0]}