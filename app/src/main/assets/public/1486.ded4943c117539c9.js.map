{"version":3,"file":"1486.ded4943c117539c9.js","mappings":"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","names":["StorageVolumes","registerPlugin","LoadingService","constructor","loadingCtrl","this","showLoading","options","showBackdrop","_this","_asyncToGenerator","loading","create","onWillDismiss","then","present","hideLoading","_this2","dismiss","isLoading","autoHide","time","_this3","duration","t","i0","i1","core","Yz7","factory","ɵfac","providedIn","SizePipe","transform","bytes","Number","toFixed","Yjl","pure","standalone","Filesystem","web","__webpack_require__","e","bind","m","FilesystemWeb","FileOpener","storage_r4","_r7","$implicit","ctx_r6","currentPath","set","path","basePath","name","totalBytes","freeBytes","FileManagerPage_ion_list_10_ion_item_1_Template","ctx_r0","storageDirectories","_r15","item_r9","ctx_r13","openDir","last_r10","size","ctime","_r19","ctx_r17","clickFile","FileManagerPage_ion_list_11_ng_container_5_ion_item_sliding_1_Template","FileManagerPage_ion_list_11_ng_container_5_ion_item_2_Template","isFile","_r22","ctx_r21","back","FileManagerPage_ion_list_11_ng_container_5_Template","ctx_r1","filesList","_r24","ctx_r23","testCreateFile","FileManagerPage","platform","inject","Platform","alertCtrl","AlertController","signal","canGoBack","effect","console","log","loadDocuments","ionViewWillEnter","checkPermissions","ready","getVolumes","ngOnInit","publicStorage","_volumesResults$volum","volumesResults","volumes","item","_this4","pathToOpen","_this5","checkGoBack","content","files","map","file","includes","format","split","pop","err","alert","header","message","backdropDismiss","buttons","text","role","handler","_ref2","apply","arguments","_ref3","_this6","directories","length","splice","join","filePath","uri","_this7","filename","Math","floor","random","data","Xpm","selectors","features","decls","vars","consts","template","rf","ctx","FileManagerPage_ion_list_10_Template","FileManagerPage_ion_list_11_Template","FileManagerPage_ion_footer_12_Template","IonicModule","CommonModule","i2","FormsModule"],"sourceRoot":"webpack:///","sources":["./src/capacitor-storage-volumes-plugin/index.ts","./src/app/core/services/loading/loading.service.ts","./src/app/core/pipes/size/size.pipe.ts","./node_modules/@capacitor/filesystem/dist/esm/index.js","./node_modules/@capacitor-community/file-opener/dist/esm/index.js","./src/app/file-manager/file-manager.page.html","./src/app/file-manager/file-manager.page.ts"],"sourcesContent":["import {registerPlugin} from \"@capacitor/core\";\nimport {StorageVolumesPlugin} from \"@root/capacitor-storage-volumes-plugin/definitions\";\n\nconst StorageVolumes = registerPlugin<StorageVolumesPlugin>('StorageVolumes', {\n  // web: () => import('./web').then(m => new m.AdMobWeb()),\n});\n\n\nexport {StorageVolumes};\n","import { Injectable } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\nimport { LoadingOptions } from '@ionic/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n  private loading!: HTMLIonLoadingElement | null;\n\n  constructor(public loadingCtrl: LoadingController) {\n  }\n\n  /**\n   * showBackdrop: true потому что на ios сливается\n   *\n   * @param options\n   */\n  public async showLoading(options: LoadingOptions = {\n    showBackdrop: true\n  }) {\n\n    this.loading = await this.loadingCtrl.create(options);\n    this.loading.onWillDismiss().then(() => {\n      this.loading = null;\n    });\n    await this.loading.present();\n  }\n\n  public async hideLoading() {\n    try {\n      if (this.loading) {\n        await this.loading.dismiss();\n      }\n\n    } catch (error) {\n\n    }\n  }\n\n  public isLoading(): boolean {\n    return !!this.loading;\n  }\n\n  public async autoHide(time: number) {\n    this.loading = await this.loadingCtrl.create({\n      duration: time\n    });\n    await this.loading.present();\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'size',\n  standalone: true\n})\nexport class SizePipe implements PipeTransform {\n\n\n  public transform(bytes: string | number) {\n    bytes = Number(bytes);\n\n    // return GB or MB or KB or Bytes\n    if (bytes >= 1073741824) {\n      return (bytes / 1073741824).toFixed(2) + ' GB';\n    } else if (bytes >= 1048576) {\n      return (bytes / 1048576).toFixed(2) + ' MB';\n    } else if (bytes >= 1024) {\n      return (bytes / 1024).toFixed(2) + ' KB';\n    } else if (bytes > 1) {\n      return bytes + ' Bytes';\n    }\n\n\n    return bytes;\n  }\n}\n","import { registerPlugin } from '@capacitor/core';\nconst Filesystem = registerPlugin('Filesystem', {\n    web: () => import('./web').then(m => new m.FilesystemWeb()),\n});\nexport * from './definitions';\nexport { Filesystem };\n","import { registerPlugin } from '@capacitor/core';\nconst FileOpener = registerPlugin('FileOpener');\nexport * from './definitions.js';\nexport { FileOpener };\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-menu-button></ion-menu-button>\n        </ion-buttons>\n        <ion-title>Volumes plugin</ion-title>\n      <ion-buttons slot=\"end\">\n        <ion-button (click)=\"getVolumes()\"><ion-icon name=\"refresh-circle-outline\"></ion-icon></ion-button>\n      </ion-buttons>\n    </ion-toolbar>\n</ion-header>\n\n<ion-content>\n    <ion-list *ngIf=\"!currentPath()\">\n        <ion-item *ngFor=\"let storage of storageDirectories(); last as last;\"\n                  (click)=\"currentPath.set(storage.path); basePath.set(storage.path)\">\n            <ion-icon name=\"file-tray-full-outline\" slot=\"start\"></ion-icon>\n            <ion-label>\n                <h3>{{storage.name}}</h3>\n                <p>{{storage.path}}</p>\n                <p>{{(storage.totalBytes - storage.freeBytes) | size}} used of {{storage.totalBytes | size}}</p>\n            </ion-label>\n        </ion-item>\n    </ion-list>\n\n    <ion-list *ngIf=\"currentPath()\">\n        <!--\n        <ion-item (click)=\"currentPath.set(''); basePath.set('')\">\n          <ion-icon name=\"arrow-undo-outline\" slot=\"start\" size=\"small\"></ion-icon>\n          <ion-label> Choose storage </ion-label>\n        </ion-item>\n        -->\n\n        <ion-item (click)=\"back()\">\n            <ion-icon name=\"arrow-undo-outline\" slot=\"start\" size=\"small\"></ion-icon>\n            <ion-label> ...</ion-label>\n        </ion-item>\n        <ng-container *ngFor=\"let item of filesList(); let last = last;\">\n            <ion-item-sliding *ngIf=\"!item.isFile\">\n                <ion-item [lines]=\"last ? 'none' : 'full'\" button=\"true\" detail=\"true\" (click)=\"openDir(item)\">\n                    <ion-icon name=\"folder\" slot=\"start\" size=\"small\"></ion-icon>\n                    <ion-label>\n                        <h3>{{item.name}}</h3>\n                        <p>{{item.size | size}} {{item.ctime | date}}</p>\n                    </ion-label>\n                </ion-item>\n            </ion-item-sliding>\n\n\n            <ion-item detail=\"false\" button=\"true\" *ngIf=\"item.isFile\" (click)=\"clickFile(item)\">\n                <ion-icon name=\"document\" slot=\"start\" size=\"small\"></ion-icon>\n                <ion-label>\n                    <h3>{{item.name}}</h3>\n                    <p>{{item.size}} {{item.ctime | date}}</p>\n                </ion-label>\n            </ion-item>\n\n        </ng-container>\n    </ion-list>\n\n</ion-content>\n<ion-footer *ngIf=\"currentPath()\">\n    <ion-toolbar class=\"ion-text-center\">\n        <ion-button (click)=\"testCreateFile()\">Test create file</ion-button>\n    </ion-toolbar>\n</ion-footer>\n","import {Component, effect, inject, OnInit, signal} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {AlertController, IonicModule, Platform} from '@ionic/angular';\nimport {VolumeInfo} from \"@root/capacitor-storage-volumes-plugin/definitions\";\nimport {StorageVolumes} from \"@root/capacitor-storage-volumes-plugin\";\nimport {LoadingService} from \"@core/services/loading/loading.service\";\nimport {SizePipe} from \"@core/pipes/size/size.pipe\";\nimport {Filesystem} from \"@capacitor/filesystem\";\nimport {FileOpener} from \"@capacitor-community/file-opener\";\n\n@Component({\n    selector: 'app-file-manager',\n    templateUrl: './file-manager.page.html',\n    styleUrls: ['./file-manager.page.scss'],\n    standalone: true,\n    imports: [IonicModule, CommonModule, FormsModule, SizePipe]\n})\nexport class FileManagerPage implements OnInit {\n    readonly platform = inject(Platform);\n    public loading = inject(LoadingService);\n    readonly alertCtrl = inject(AlertController);\n    public storageDirectories = signal<VolumeInfo[] | null>(null);\n    public currentPath = signal<string>('');\n    public filesList = signal<any>([]);\n    public basePath = signal<string>('');\n    public canGoBack = signal<boolean>(false);\n\n    constructor() {\n        effect(async () => {\n            console.log(`The currentPath is: ${this.currentPath()})`);\n            if (this.currentPath()) {\n                await this.loadDocuments();\n            }\n        });\n    }\n\n    async ionViewWillEnter() {\n        const isPermissionGranted = await this.checkPermissions();\n        if (!isPermissionGranted) {\n            return;\n        }\n\n        const ready = await this.platform.ready();\n        await this.getVolumes();\n    }\n\n    ngOnInit() {\n    }\n\n    async checkPermissions(): Promise<boolean> {\n        const checkPermissions = await Filesystem.checkPermissions();\n        if (checkPermissions.publicStorage === 'denied') {\n            const requestPermissions = await Filesystem.requestPermissions();\n\n            if (requestPermissions.publicStorage === 'denied') {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    async getVolumes() {\n        this.storageDirectories.set(null);\n        const volumesResults = await StorageVolumes.getVolumes();\n        this.storageDirectories.set(volumesResults?.volumes ?? null);\n    }\n\n    public async openDir(item: any) {\n        //this.currentPath.set(item.path);\n        const pathToOpen = this.currentPath() !== '' ? `${this.currentPath()}/${item.name}` : item.name;\n        //  console.log(`Opening path: ${pathToOpen}`);\n        // this.currentPath.set(pathToOpen);\n        console.log(`Opening path: ${pathToOpen}`, item);\n        this.currentPath.set(pathToOpen);\n    }\n\n    private async loadDocuments() {\n        console.log(`Loading documents from path: ${this.currentPath()}`);\n        await Filesystem.requestPermissions();\n        this.filesList.set([]);\n        this.canGoBack.set(this.checkGoBack());\n\n        try {\n            const folderContent = await Filesystem.readdir({\n                path: this.currentPath(),\n            })\n\n            let content = folderContent.files.map(file => {\n                return {\n                    ...file,\n                    isFile: file.name.includes('.'),// TODO file.type === 'file', ??\n                    format: file.name.split('.').pop()\n                }\n            })\n\n            console.log(content);\n\n\n            this.filesList.set(content)\n            await this.loading.hideLoading();\n        } catch (err: any) {\n            const alert = await this.alertCtrl.create({\n                header: err.message,\n                backdropDismiss: false,\n                buttons: [\n                    {\n                        text: 'back',\n                        role: 'ok',\n                        handler: async () => {\n                            await this.back();\n                        }\n                    },\n                    {\n                        text: 'To select storage',\n                        role: 'ok',\n                        handler: async () => {\n                            this.basePath.set('');\n                            this.currentPath.set('');\n                        }\n                    }\n                ]\n            })\n            await this.loading.hideLoading();\n            await alert.present();\n        }\n    }\n\n\n    public async back() {\n        if (this.canGoBack()) {\n            await this.loading.showLoading();\n            const directories = this.currentPath().split(\"/\");\n            let path = '';\n\n            if (directories.length > 1) {\n                directories.splice(-1);\n                path = directories.join('/')\n            }\n            this.currentPath.set(path);\n            await this.loading.hideLoading();\n            // await this.loadDocuments();\n        } else {\n            this.currentPath.set('');\n            this.basePath.set('')\n        }\n    }\n\n    public async clickFile(item: any) {\n\n        await FileOpener.open({\n            filePath: item.uri\n        })\n\n\n    }\n\n    checkGoBack() {\n        if (this.currentPath().length > this.basePath().length) {\n            return true;\n        } else {\n            this.currentPath.set(this.basePath())\n            return false;\n        }\n    }\n\n    async testCreateFile() {\n        // random text in base64 encoding\n        const base64data = 'data:text/plain;base64,SGVsbG8sIFdvcmxkIQ==';\n\n        const filename = `test-${Math.floor(Math.random() * 100000)}.txt`;\n        const writeResult = await Filesystem.writeFile(\n            {\n                path: `${this.currentPath()}/${filename}`,\n                data: base64data as string\n            }\n        )\n        if (writeResult) {\n            await this.loadDocuments();\n        } else {\n            console.log('error')\n        }\n    }\n}\n"],"x_google_ignoreList":[3,4]}