{"version":3,"file":"4260.f63992acfbaf78db.js","mappings":"wKAGA,MAAMA,aAAYC,IAAgC,YAAa,CAC7D,OCSWC,EAAa,MAP1B,MAOaA,EAMTC,cALOC,KAAAC,kBAAiBC,OAAO,CAC3BC,kBAAkB,EAClBC,qBAAqB,GAIzB,CAEAC,WACIL,KAAKM,mBACT,CAEAC,iBACIX,kBACJ,CAEAY,gBACIZ,iBACJ,CAEAU,oBACIG,QAAQC,IAAI,CACRd,qBACAA,0BACDe,KAAK,EAAER,EAAkBC,MACxBJ,KAAKC,eAAeW,OAAOC,QACpBA,EACHV,iBAAkBA,EAAiBA,iBACnCC,oBAAqBA,EAAoBA,sBAC3C,EAGV,EAjCSN,SAAa,mBAAAgB,iBAAbhB,EAAa,EAAbA,EAAa,UAAAiB,EAAAC,IAAA,MAAblB,EAAamB,UAAA,qBAAAC,YAAA,EAAAC,SAAA,CAAAC,OAAAC,MAAA,GAAAC,KAAA,EAAAC,OAAA,0DAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,ICb1BL,MAAA,eAAAA,CAAY,gBAAZA,CAAY,mBAGAA,MAAA,qBACJA,QACAA,MAAA,eAAWA,MAAA,uBAAiBA,YAIpCA,MAAA,gBAAAA,CAAa,aAAbA,CAAa,YAAbA,CAAa,cAAbA,CAAa,SAAbA,CAAa,WAKcA,MAAA,qBAAyBA,UACpCA,MAAA,mBAAYA,MAAA,0BAASM,EAAApB,mBAAmB,GAAEc,MAAA,oBAAaA,YAG/DA,MAAA,aAAAA,CAAS,eAATA,CAAS,mBAEWA,MAAA,0BAASM,EAAAnB,gBAAgB,GAAEa,MAAA,uBAAgBA,UAE3DA,MAAA,eAAAA,CAAkB,mBACFA,MAAA,0BAASM,EAAAlB,eAAe,GAAEY,MAAA,sBAAeA,uBAT1CA,MAAA,IAAAA,YAAA,KAAAM,EAAAzB,mCDHb0B,KAAWC,kDAAEC,KAAYC,KAAEC,QAE5BjC,CAAa","names":["KioskMode","registerPlugin","KioskModePage","constructor","this","KioskModeState","signal","isDeviceOwnerApp","isLockTaskPermitted","ngOnInit","getStateKioskMode","startKioskMode","stopKioskMode","Promise","all","then","update","state","t","core","Xpm","selectors","standalone","features","i0","decls","vars","consts","template","rf","ctx","IonicModule","i1","CommonModule","i2","FormsModule"],"sourceRoot":"webpack:///","sources":["./src/capacitor-kiosk-mode/index.ts","./src/app/kiosk-mode/kiosk-mode.page.ts","./src/app/kiosk-mode/kiosk-mode.page.html"],"sourcesContent":["import {registerPlugin} from \"@capacitor/core\";\nimport {KioskModePlugin} from \"@root/capacitor-kiosk-mode/definitions\";\n\nconst KioskMode = registerPlugin<KioskModePlugin>('KioskMode', {\n  // web: () => import('./web').then(m => new m.AdMobWeb()),\n});\n\n\nexport {KioskMode};\n","import {Component, OnInit, signal} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\nimport {KioskMode} from \"@root/capacitor-kiosk-mode\";\n\n@Component({\n    selector: 'app-kiosk-mode',\n    templateUrl: './kiosk-mode.page.html',\n    styleUrls: ['./kiosk-mode.page.scss'],\n    standalone: true,\n    imports: [IonicModule, CommonModule, FormsModule]\n})\nexport class KioskModePage implements OnInit {\n    public KioskModeState = signal({\n        isDeviceOwnerApp: false,\n        isLockTaskPermitted: false\n    });\n\n    constructor() {\n    }\n\n    ngOnInit() {\n        this.getStateKioskMode();\n    }\n\n    startKioskMode() {\n        KioskMode.enterKioskMode();\n    }\n\n    stopKioskMode() {\n        KioskMode.exitKioskMode();\n    }\n\n    getStateKioskMode() {\n        Promise.all([\n            KioskMode.isDeviceOwnerApp(),\n            KioskMode.isLockTaskPermitted()\n        ]).then(([isDeviceOwnerApp, isLockTaskPermitted]) => {\n            this.KioskModeState.update(state => ({\n                ...state,\n                isDeviceOwnerApp: isDeviceOwnerApp.isDeviceOwnerApp,\n                isLockTaskPermitted: isLockTaskPermitted.isLockTaskPermitted\n            }));\n        });\n\n    }\n\n}\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-menu-button></ion-menu-button>\n        </ion-buttons>\n        <ion-title>kiosk mode plugin</ion-title>\n    </ion-toolbar>\n</ion-header>\n\n<ion-content>\n\n    <ion-grid>\n        <ion-row>\n            <ion-col size=\"12\">\n                <pre><code>{{KioskModeState()|json}}</code></pre>\n                <ion-button (click)=\"getStateKioskMode()\">Refresh state</ion-button>\n            </ion-col>\n        </ion-row>\n        <ion-row>\n            <ion-col size=\"6\">\n                <ion-button (click)=\"startKioskMode()\">Start Kiosk Mode</ion-button>\n            </ion-col>\n            <ion-col size=\"6\">\n                <ion-button (click)=\"stopKioskMode()\">Stop Kiosk Mode</ion-button>\n            </ion-col>\n        </ion-row>\n    </ion-grid>\n</ion-content>\n"],"x_google_ignoreList":[]}